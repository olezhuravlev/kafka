version: '3.7'
services:
  zookeeper-1:
    image: "confluentinc/cp-zookeeper:${KAFKA_VERSION}"
    container_name: zookeeper-1
    hostname: zookeeper-1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVERS: 0.0.0.0:2888:3888
    ports:
      - "2181:2181" # External client communication port.
      - "2888:2888" # Peers connection port.
      - "3888:3888" # Leader election port.
    networks:
      - kafka-network

  schema-registry:
    image: "confluentinc/cp-schema-registry:${KAFKA_VERSION}"
    container_name: schema-registry
    hostname: schema-registry
    depends_on:
      - zookeeper-1
    environment:
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-broker-3:9092"
      SCHEMA_REGISTRY_LISTENERS: "http://schema-registry:8081"
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper-1:2181"
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: "_my_schema_registry"
      SCHEMA_REGISTRY_DEBUG: "true"
    ports:
      - "8081:8081"
    networks:
      - kafka-network

  kafka-broker-1:
    image: "confluentinc/cp-kafka:${KAFKA_VERSION}"
    container_name: kafka-broker-1
    depends_on:
      - zookeeper-1
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    # An important note about accessing Kafka from clients on other machines:
    # -----------------------------------------------------------------------
    #
    # The config used here exposes port 9092 for _external_ connections to the broker
    # i.e. those from _outside_ the docker network. This could be from the host machine
    # running docker, or maybe further afield if you've got a more complicated setup.
    # If the latter is true, you will need to change the value 'localhost' in
    # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those
    # remote clients
    #
    # For connections _internal_ to the docker network, such as from other services
    # and components, use broker:9092.
    #
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    #
    ports:
      - "9072:9092"
      - "9073:9093"
      - "9977:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-1:9092,SSL://kafka-broker-1:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,SSL://kafka-broker-1:9093
      KAFKA_SSL_KEY_CREDENTIALS: ssl_key_credentials #REQUIRED!
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks #REQUIRED!
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ssl_truststore_credentials # REQUIRED!
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks #REQUIRED!
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ssl_keystore_credentials #REQUIRED!
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - /home/oleg/kafka/src/main/resources/kafka:/resources-kafka
      - /home/oleg/kafka/confluent-platform-security-tools/ssl/kafka-brokers/kafka-broker-1:/etc/kafka/secrets
      - /home/oleg/kafka/confluent-platform-security-tools/ssl/kafka-brokers/client:/resources-kafka/ssl-client
    networks:
      - kafka-network

  kafka-broker-2:
    image: "confluentinc/cp-kafka:${KAFKA_VERSION}"
    container_name: kafka-broker-2
    depends_on:
      - zookeeper-1
    ports:
      - "9082:9092"
      - "9083:9093"
      - "9987:9997"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-2:9092,SSL://kafka-broker-2:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9092,SSL://kafka-broker-2:9093
      KAFKA_SSL_KEY_CREDENTIALS: ssl_key_credentials #REQUIRED!
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks #REQUIRED!
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ssl_truststore_credentials # REQUIRED!
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks #REQUIRED!
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ssl_keystore_credentials #REQUIRED!
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - /home/oleg/kafka/src/main/resources/kafka:/resources-kafka
      - /home/oleg/kafka/confluent-platform-security-tools/ssl/kafka-brokers/kafka-broker-2:/etc/kafka/secrets
      - /home/oleg/kafka/confluent-platform-security-tools/ssl/kafka-brokers/client:/resources-kafka/ssl-client
    networks:
      - kafka-network

  kafka-broker-3:
    image: "confluentinc/cp-kafka:${KAFKA_VERSION}"
    container_name: kafka-broker-3
    depends_on:
      - zookeeper-1
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-3:9092,SSL://kafka-broker-3:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9092,SSL://kafka-broker-3:9093
      KAFKA_SSL_KEY_CREDENTIALS: ssl_key_credentials #REQUIRED!
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks #REQUIRED!
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ssl_truststore_credentials # REQUIRED!
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks #REQUIRED!
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ssl_keystore_credentials #REQUIRED!
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - /home/oleg/kafka/src/main/resources/kafka:/resources-kafka
      - /home/oleg/kafka/confluent-platform-security-tools/ssl/kafka-brokers/kafka-broker-3:/etc/kafka/secrets
      - /home/oleg/kafka/confluent-platform-security-tools/ssl/kafka-brokers/client:/resources-kafka/ssl-client
    networks:
      - kafka-network

  kafka-ui:
    image: "provectuslabs/kafka-ui:${KAFKA_UI_VERSION}"
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka-broker-3:9092"
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - kafka-network

  kafka-rest:
    image: "confluentinc/cp-kafka-rest:${KAFKA_VERSION}"
    container_name: kafka-rest
    hostname: kafka-rest
    ports:
      - "8082:8082"
    depends_on:
      - zookeeper-1
      - kafka-broker-3
      - schema-registry
    environment:
      KAFKA_REST_HOST_NAME: "kafka-rest"
      KAFKA_REST_LISTENERS: "http://kafka-rest:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper-1:2181"
      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka-broker-3:9092"
    networks:
      - kafka-network

  ksqldb-server:
    image: "confluentinc/ksqldb-server:${KSQL_VERSION}"
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka-broker-3
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: "kafka-broker-3:9092"
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
    networks:
      - kafka-network

  ksqldb-cli:
    image: "confluentinc/ksqldb-cli:${KSQL_VERSION}"
    container_name: ksqldb-cli
    depends_on:
      - kafka-broker-3
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
